#include <iostream>
#include <fstream>
#include <string>
#include <cstdio>
#include <vector>
#include <cstring>
#include <dirent.h>
#include <sys/types.h>

using namespace std;

int tokenizing(char* token)
{
    int a=-1;
    if(strcmp(token, "asm") ==0 ) a=0;
    else if(strcmp(token, "auto") ==0 )  a=1;
    else if(strcmp(token, "bool") ==0 ) a=2;
    else if(strcmp(token, "break") ==0 ) a=3;
    else if(strcmp(token, "case") ==0 ) a=4;
    else if(strcmp(token, "catch") ==0 ) a=5;
    else if(strcmp(token, "char") ==0 ) a=6;
    else if(strcmp(token, "class") ==0 ) a=7;
    else if(strcmp(token, "const") ==0 ) a=8;
    else if(strcmp(token, "const_cast") ==0 ) a=9;
    else if(strcmp(token, "continue") ==0 ) a=10;
    else if(strcmp(token, "default") ==0 ) a=11;
    else if(strcmp(token, "delete") ==0 ) a=12;
    else if(strcmp(token, "do") ==0 ) a=13;
    else if(strcmp(token, "double") ==0 ) a=14;
    else if(strcmp(token, "dynamic_cast") ==0 ) a=15;
    else if(strcmp(token, "else") ==0 ) a=16;
    else if(strcmp(token, "enum") ==0 ) a=17;
    else if(strcmp(token, "explicit") ==0 ) a=18;
    else if(strcmp(token, "export") ==0 ) a=19;
    else if(strcmp(token, "extern") ==0 ) a=20;
    else if(strcmp(token, "FALSE") ==0 ) a=21;
    else if(strcmp(token, "float") ==0 ) a=22;
    else if(strcmp(token, "for") ==0 ) a=23;
    else if(strcmp(token, "friend") ==0 ) a=24;
    else if(strcmp(token, "goto") ==0 ) a=25;
    else if(strcmp(token, "if") ==0 ) a=26;
    else if(strcmp(token, "inline") ==0 ) a=27;
    else if(strcmp(token, "int") ==0 ) a=28;
    else if(strcmp(token, "long") ==0 ) a=29;
    else if(strcmp(token, "mutable") ==0 ) a=30;
    else if(strcmp(token, "namespace") ==0 ) a=31;
    else if(strcmp(token, "new") ==0 ) a=32;
    else if(strcmp(token, "operator") ==0 ) a=33;
    else if(strcmp(token, "private") ==0 ) a=34;
    else if(strcmp(token, "protected") ==0 ) a=35;
    else if(strcmp(token, "public") ==0 ) a=36;
    else if(strcmp(token, "register") ==0 ) a=37;
    else if(strcmp(token, "reinterpret_cast") ==0 ) a=38;
    else if(strcmp(token, "return") ==0 ) a=39;
    else if(strcmp(token, "short") ==0 ) a=40;
    else if(strcmp(token, "signed") ==0 ) a=41;
    else if(strcmp(token, "sizeof") ==0 ) a=42;
    else if(strcmp(token, "static") ==0 ) a=43;
    else if(strcmp(token, "static_cast") ==0 ) a=44;
    else if(strcmp(token, "struct") ==0 ) a=45;
    else if(strcmp(token, "switch") ==0 ) a=46;
    else if(strcmp(token, "template") ==0 ) a=47;
    else if(strcmp(token, "this") ==0 ) a=48;
    else if(strcmp(token, "throw") ==0 ) a=49;
    else if(strcmp(token, "TRUE") ==0 ) a=50;
    else if(strcmp(token, "try") ==0 ) a=51;
    else if(strcmp(token, "typedef") ==0 ) a=52;
    else if(strcmp(token, "typeid") ==0 ) a=53;
    else if(strcmp(token, "typename") ==0 ) a=54;
    else if(strcmp(token, "union") ==0 ) a=55;
    else if(strcmp(token, "unsigned") ==0 ) a=56;
    else if(strcmp(token, "using") ==0 ) a=57;
    else if(strcmp(token, "virtual") ==0 ) a=58;
    else if(strcmp(token, "void") ==0 ) a=59;
    else if(strcmp(token, "volatile") ==0 ) a=60;
    else if(strcmp(token, "wchar_t") ==0 ) a=61;
    else if(strcmp(token, "while") ==0 ) a=62;
    else if(strcmp(token, "And") ==0 ) a=63;
    else if(strcmp(token, "and_eq") ==0 ) a=64;
    else if(strcmp(token, "bitand") ==0 ) a=65;
    else if(strcmp(token, "bitor") ==0 ) a=66;
    else if(strcmp(token, "compl") ==0 ) a=67;
    else if(strcmp(token, "not") ==0 ) a=68;
    else if(strcmp(token, "not_eq") ==0 ) a=69;
    else if(strcmp(token, "or") ==0 ) a=70;
    else if(strcmp(token, "or_eq") ==0 ) a=71;
    else if(strcmp(token, "xor") ==0 ) a=72;
    else if(strcmp(token, "xor_eq") ==0 ) a=73;
    else if(strcmp(token, "concepts") ==0 ) a=74;
    else if(strcmp(token, "coroutine") ==0 ) a=75;
    else if(strcmp(token, "cstdlib") ==0 ) a=76;
    else if(strcmp(token, "csignal") ==0 ) a=77;
    else if(strcmp(token, "csetjmp") ==0 ) a=78;
    else if(strcmp(token, "cstdarg") ==0 ) a=79;
    else if(strcmp(token, "typeinfo") ==0 ) a=80;
    else if(strcmp(token, "typeindex") ==0 ) a=81;
    else if(strcmp(token, "type_traits") ==0 ) a=82;
    else if(strcmp(token, "bitset") ==0 ) a=83;
    else if(strcmp(token, "functional") ==0 ) a=84;
    else if(strcmp(token, "utility") ==0 ) a=85;
    else if(strcmp(token, "ctime") ==0 ) a=86;
    else if(strcmp(token, "chrono") ==0 ) a=87;
    else if(strcmp(token, "cstddef") ==0 ) a=88;
    else if(strcmp(token, "initializer_list") ==0 ) a=89;
    else if(strcmp(token, "tuple") ==0 ) a=90;
    else if(strcmp(token, "any") ==0 ) a=91;
    else if(strcmp(token, "optional") ==0 ) a=92;
    else if(strcmp(token, "variant") ==0 ) a=93;
    else if(strcmp(token, "compare") ==0 ) a=94;
    else if(strcmp(token, "version") ==0 ) a=95;
    else if(strcmp(token, "new") ==0 ) a=96;
    else if(strcmp(token, "memory") ==0 ) a=97;
    else if(strcmp(token, "scoped_allocator") ==0 ) a=98;
    else if(strcmp(token, "climits") ==0 ) a=99;
    else if(strcmp(token, "cfloat") ==0 ) a=100;
    else if(strcmp(token, "cstdint") ==0 ) a=101;
    else if(strcmp(token, "cinttypes") ==0 ) a=102;
    else if(strcmp(token, "limits") ==0 ) a=103;
    else if(strcmp(token, "exception") ==0 ) a=104;
    else if(strcmp(token, "stdexcept") ==0 ) a=105;
    else if(strcmp(token, "cassert") ==0 ) a=106;
    else if(strcmp(token, "system_error") ==0 ) a=107;
    else if(strcmp(token, "cerrno") ==0 ) a=108;
    else if(strcmp(token, "contract") ==0 ) a=109;
    else if(strcmp(token, "cctype") ==0 ) a=110;
    else if(strcmp(token, "cwctype") ==0 ) a=111;
    else if(strcmp(token, "cstring") ==0 ) a=112;
    else if(strcmp(token, "cwchar") ==0 ) a=113;
    else if(strcmp(token, "cuchar") ==0 ) a=114;
    else if(strcmp(token, "string") ==0 ) a=115;
    else if(strcmp(token, "string_view") ==0 ) a=116;
    else if(strcmp(token, "charconv") ==0 ) a=117;
    else if(strcmp(token, "array") ==0 ) a=118;
    else if(strcmp(token, "vector") ==0 ) a=119;
    else if(strcmp(token, "deque") ==0 ) a=120;
    else if(strcmp(token, "list") ==0 ) a=121;
    else if(strcmp(token, "forward_list") ==0 ) a=122;
    else if(strcmp(token, "set") ==0 ) a=123;
    else if(strcmp(token, "map") ==0 ) a=124;
    else if(strcmp(token, "unordered_set") ==0 ) a=125;
    else if(strcmp(token, "unordered_map") ==0 ) a=126;
    else if(strcmp(token, "stack") ==0 ) a=127;
    else if(strcmp(token, "queue") ==0 ) a=128;
    else if(strcmp(token, "span") ==0 ) a=129;
    else if(strcmp(token, "iosfwd") ==0 ) a=130;
    else if(strcmp(token, "ios") ==0 ) a=131;
    else if(strcmp(token, "istream") ==0 ) a=132;
    else if(strcmp(token, "ostream") ==0 ) a=133;
    else if(strcmp(token, "iostream") ==0 ) a=134;
    else if(strcmp(token, "fstream") ==0 ) a=135;
    else if(strcmp(token, "sstream") ==0 ) a=136;
    else if(strcmp(token, "syncstream") ==0 ) a=137;
    else if(strcmp(token, "strstream") ==0 ) a=138;
    else if(strcmp(token, "iomanip") ==0 ) a=139;
    else if(strcmp(token, "streambuf") ==0 ) a=140;
    else if(strcmp(token, "cstdio") ==0 ) a=141;
    else if(strcmp(token, "experimental/ranges/algorithm") ==0 ) a=142;
    else if(strcmp(token, "experimental/ranges/concepts") ==0 ) a=143;
    else if(strcmp(token, "experimental/ranges/functional") ==0 ) a=144;
    else if(strcmp(token, "experimental/ranges/iterator") ==0 ) a=145;
    else if(strcmp(token, "experimental/ranges/random") ==0 ) a=146;
    else if(strcmp(token, "experimental/ranges/range") ==0 ) a=147;
    else if(strcmp(token, "experimental/ranges/tuple") ==0 ) a=148;
    else if(strcmp(token, "experimental/ranges/type_traits") ==0 ) a=149;
    else if(strcmp(token, "experimental/ranges/utility") ==0 ) a=150;
    else if(strcmp(token, "experimental/algorithm") ==0 ) a=151;
    else if(strcmp(token, "experimental/array") ==0 ) a=152;
    else if(strcmp(token, "experimental/deque") ==0 ) a=153;
    else if(strcmp(token, "experimental/forward_list") ==0 ) a=154;
    else if(strcmp(token, "experimental/functional") ==0 ) a=155;
    else if(strcmp(token, "experimental/iterator") ==0 ) a=156;
    else if(strcmp(token, "experimental/list") ==0 ) a=157;
    else if(strcmp(token, "experimental/map") ==0 ) a=158;
    else if(strcmp(token, "experimental/memory") ==0 ) a=159;
    else if(strcmp(token, "experimental/numeric") ==0 ) a=160;
    else if(strcmp(token, "experimental/propagate_const") ==0 ) a=161;
    else if(strcmp(token, "experimental/random") ==0 ) a=162;
    else if(strcmp(token, "experimental/set") ==0 ) a=163;
    else if(strcmp(token, "experimental/source_location") ==0 ) a=164;
    else if(strcmp(token, "experimental/string") ==0 ) a=165;
    else if(strcmp(token, "experimental/type_traits") ==0 ) a=166;
    else if(strcmp(token, "experimental/unordered_map") ==0 ) a=167;
    else if(strcmp(token, "experimental/unordered_set") ==0 ) a=168;
    else if(strcmp(token, "experimental/vector") ==0 ) a=169;
    else if(strcmp(token, "experimental/atomic") ==0 ) a=170;
    else if(strcmp(token, "experimental/barrier") ==0 ) a=171;
    else if(strcmp(token, "experimental/future") ==0 ) a=172;
    else if(strcmp(token, "experimental/latch") ==0 ) a=173;
    else if(strcmp(token, "experimental/algorithm") ==0 ) a=174;
    else if(strcmp(token, "experimental/any") ==0 ) a=175;
    else if(strcmp(token, "experimental/chrono") ==0 ) a=176;
    else if(strcmp(token, "experimental/deque") ==0 ) a=177;
    else if(strcmp(token, "experimental/forward_list") ==0 ) a=178;
    else if(strcmp(token, "experimental/future") ==0 ) a=179;
    else if(strcmp(token, "experimental/list") ==0 ) a=180;
    else if(strcmp(token, "experimental/functional") ==0 ) a=181;
    else if(strcmp(token, "experimental/map") ==0 ) a=182;
    else if(strcmp(token, "experimental/memory") ==0 ) a=183;
    else if(strcmp(token, "experimental/memory_resource") ==0 ) a=184;
    else if(strcmp(token, "experimental/optional") ==0 ) a=185;
    else if(strcmp(token, "experimental/ratio") ==0 ) a=186;
    else if(strcmp(token, "experimental/regex") ==0 ) a=187;
    else if(strcmp(token, "experimental/set") ==0 ) a=188;
    else if(strcmp(token, "experimental/string") ==0 ) a=189;
    else if(strcmp(token, "experimental/string_view") ==0 ) a=190;
    else if(strcmp(token, "experimental/system_error") ==0 ) a=191;
    else if(strcmp(token, "experimental/tuple") ==0 ) a=192;
    else if(strcmp(token, "experimental/type_traits") ==0 ) a=193;
    else if(strcmp(token, "experimental/unordered_map") ==0 ) a=194;
    else if(strcmp(token, "experimental/unordered_set") ==0 ) a=195;
    else if(strcmp(token, "experimental/utility  ") ==0 ) a=196;
    else if(strcmp(token, "experimental/vector") ==0 ) a=197;
    else if(strcmp(token, "experimental/algorithm") ==0 ) a=198;
    else if(strcmp(token, "experimental/execution_policy") ==0 ) a=199;
    else if(strcmp(token, "experimental/exception_list") ==0 ) a=200;
    else if(strcmp(token, "experimental/numeric") ==0 ) a=201;
    else if(strcmp(token, " locale") ==0 ) a=202;
    else if(strcmp(token, "clocale") ==0 ) a=203;
    else if(strcmp(token, "codecvt") ==0 ) a=204;
    else if(strcmp(token, "regex") ==0 ) a=205;
    else if(strcmp(token, "atomic") ==0 ) a=206;
    else if(strcmp(token, "thread") ==0 ) a=207;
    else if(strcmp(token, "mutex") ==0 ) a=208;
    else if(strcmp(token, "shared_mutex") ==0 ) a=209;
    else if(strcmp(token, "future") ==0 ) a=210;
    else if(strcmp(token, "condition_variable") ==0 ) a=211;
    else if(strcmp(token, "filesystem") ==0 ) a=212;
    else if(strcmp(token, "experimental/filesystem") ==0 ) a=213;
    else if(strcmp(token, "iterator") ==0 ) a=214;
    else if(strcmp(token, "ranges") ==0 ) a=215;
    else if(strcmp(token, "algorithm") ==0 ) a=216;
    else if(strcmp(token, "execution") ==0 ) a=217;
    else if(strcmp(token, "cmath") ==0 ) a=218;
    else if(strcmp(token, "complex") ==0 ) a=219;
    else if(strcmp(token, "valarray") ==0 ) a=220;
    else if(strcmp(token, "random") ==0 ) a=221;
    else if(strcmp(token, "numeric") ==0 ) a=222;
    else if(strcmp(token, "ratio") ==0 ) a=223;
    else if(strcmp(token, "cfenv") ==0 ) a=224;
    else if(strcmp(token, "bit") ==0 ) a=225;
    else if(strcmp(token, "bits/stdc++.h") ==0 ) a=226;
    else if(strcmp(token, "#include") ==0 ) a=227;
    else a=-1;

    return a;
}